Javaで有名もしくは自身で興味のあるフレームワークを3つ以上調べ、そのフレームワークの特徴をまとめて記述しましょう。
※調査内容に規定はありませんが、導入の方法や使い方、特徴など、オリジナルサイトに利用するつもりで調べてみましょう。
※MVCモデルは開発現場では前提知識として知っていて欲しいという知識なので、自分で腑に落ちて納得できるよう仕組みを理解しておきましょう。

●Spring framework
導入方法・・・①Spring Tool Suiteのダウンロード
　　　　　　　②ダウンロードしたzipを解凍しインストール。解凍すると「sts-bundle」というフォルダができる。その中の「sts-*.*.*.RELEASE」⇒「STS.exe」を実行
　　　　　　　③プロジェクト作成。「File」⇒「Spring Legacy Project」を選択。
　　　　　　　④表示された新規プロジェクトの作成画面にプロジェクト名等を入力していきます。
　　　　　　　　　Project名：プロジェクト名　
　　　　　　　　　Templates：Simple Spring Web Maven
　　　　　　　　　その他：そのまま
　　　　　　　⑤入力が完了したら「Finish」を押しましょう。プロジェクトが作成されているのがわかります。
　　　　　　　⑥Maven Updateを実行していきます。「プロジェクト名」を右クリック⇒「Maven」⇒「Update Project…」を選択します。
　　　　　　　⑦「プロジェクト名」にチェックが入っていることを確認し、「OK」を押します。
　　　　　　　⑧Maven Insrallを実行することで、pom.xmlに記述されているSpring Framework等がプロジェクトのライブラリとして使用できるようになります。
　　　　　　　　「プロジェクト名」を右クリック⇒「Maven」⇒「Maven install」を選択します。
　　　　　　　⑨Mavenのインストールが実行され、Build Successが出力されれば完了です。
　　　　　　　⑩サーバにプロジェクトを追加する。左下のウィンドゥに「Servers」があると思います。ない場合は、メニューの「Window」⇒「Show View」⇒「Other…」⇒「Server」　　　　　　　　⇒「Servers」を選択すると表示されます。そこに表示されているサーバを右クリック⇒「Add and Remove」を選択します。
　　　　　　　⑪開いた画面で、作成したプロジェクトを選択した状態で、「Add>」を選択します。すると「Configured」に加わります。「Finish」を選択するとサーバにプロジェクト　　　　　　　　が加わったことがわかります。
　　　　　　　⑫作成したプロジェクトを追加したサーバを右クリック⇒「Start」を選択します。
　　　　　　　⑬ブラウザを起動し、「http://localhost:8080/プロジェクト名/」にアクセスしましょう。
　　　　　　　⑭Spring Tool Suiteから表示。画面上部にあるアイコンの一覧の中に地球のようなマークがあるのでそれをクリックします。
　　　　　　　　そうするとSpring Tool Suite内でブラウザが立ち上がります。
　　　　　　　⑮開いたブラウザで、「http://localhost:8080/プロジェクト名/」にアクセスしましょう。ブラウザと同じような画面が出力されています。

特徴・・・変更に強い、拡張性が高い、保守性が高い、再利用性が高い


●Play framework
導入方法・・・①Play バイナリパッケージ(公式の最新バージョン) をダウンロードし、書き込み・読み込み権限がある場所に展開してください。（Play の実行中ファイルがアーカイブ　　　　　　　内のディレクトリに書き込まれるので、/opt にインストールするのではなく、/usr/local か書き込み権限のある場所にインストールしてください）
　　　　　　　②利便性のため、Play のインストール先ディレクトリを PATH 環境変数に追加しておきましょう。例えば、Unix 系の OS をお使いの場合は、次のように設定します:
　　　　　　　export PATH=$PATH:/relativePath/to/play
　　　　　　　③Windows では、システム環境変数を設定する必要があります。これは環境変数で設定されているパスを更新することを意味し、スペースを含むパスを使わないようにし　　　　　　　てください。


特徴・・・・Javaおよび関数型言語のScalaというプログラミング言語をサポートしている、使いやすくて開発しやすいことに主眼が置かれたフレームワーク
　　　　　・Play Frameworkは、Ruby on RailsとDjangoから大きな影響を受けた、これらと似た同種のフレームワークである。PlayのWebアプリケーションはJava環境で動作するが、　　　　　　　Java標準のWebアプリケーション仕様であるJava EEの中核機能は必要としない。PlayはJava EEの仕様に準拠しないが、その代わりにJava EE準拠のプラットフォームと比較　　　　　　してシンプルに開発を行うことができる。
　　　　　・Play Frameworkのアプリケーションは組み込みのNetty（英語版） Webサーバーを使用して実行するよう設計されている。しかし、開発したアプリケーションをWARパッケー　　　　　　ジにまとめ、Java EEのアプリケーションサーバで動作させることも可能である。

　　　　　他のJavaフレームワークと比べると、以下のような特徴を持つ
　　　　　・ステートレス: Play 2は完全にRESTfulである。Java EEのように接続ごとのセッションを利用しない。
　　　　　・自動テストの統合: JUnit, Selenium（英語版）のサポートを含む。
　　　　　・主に必要とされるAPIは標準で組み込まれている。
　　　　　・静的メソッド: コントローラの全ての開始点はstatic（Scalaの場合はfunction）として宣言する。ただしPlay 2.1以降はそれ以外の形式もサポートされている。
　　　　　・非同期IO: WebサーバーとしてNettyを使用することからPlayは非同期的に大きなリクエストを処理できる。この結果、HTTPスレッド数以上の処理を実行することができる。　　　　　　Java EEでは、Servlet 3.0までこうした非同期処理はサポートされていなかった。[16]
　　　　　・モジュラー構造: RailsやDjangoのように、Playはモジュール構造を採用している。
　　　　　・Scala言語のサポート: Play 2は内部的にScalaを使用しており、ScalaのAPIとJavaのAPI双方を公開している。Javaとも完全な互換性がある。


●JSF（JavaServer Faces）
導入方法・・・①NetBeansの[ファイル]-[新規プロジェクト]を実行。「Java Web」「Webアプリケーション」を選ぶ。
　　　　　　　②「プロジェクト名」、「プロジェクトの保存場所」を入力。プロジェクトの場所は自動的にやってくれる。
　　　　　　　③フレームワークの設定。「JavaServe Faces」をチェックし「終了」。
　　　　　　
特徴・・・開発チームとデザインチームで分業できる、Strutsに比べて分業が行いやすい、簡単に何かフレームワークに触れてみたい人にオススメ
　　　　　HTMLタグと同様のタグが多数用意されている。
　　　　　タグを使って簡単にフォーム入力欄が作れる（UIコンポーネント）
　　　　　入力値が適正な範囲かどうかなどチェックが簡単にできる（バリデーション機能）
　　　　　入力値の型変換が簡単にできる（コンバータ機能）
　　　　　入力値をプログラミング無しにJavaBeansに格納できる（バインディング機能）
　　　　　ページ移動を簡単に設定できる（ナビゲーション機能）








